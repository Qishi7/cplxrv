% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gibbs_t_cpp_full.R
\name{gibbs_t_cpp_full}
\alias{gibbs_t_cpp_full}
\title{Gibbs Sampling for Bayesian Linear Regression with Student-t}
\usage{
gibbs_t_cpp_full(
  n_mcmc,
  start_lst,
  warm = 0,
  thin = 1,
  number_par = length(name_par),
  name_par,
  y,
  X,
  a_tau = 0.5,
  b_tau = 0.5,
  a_sig = 0.5,
  b_sig = 0.5,
  metro = FALSE,
  metro.tune = NULL,
  n_chains = 1
)
}
\arguments{
\item{n_mcmc}{Integer. Number of MCMC iterations}

\item{start_lst}{List. Initial values for MCMC chain containing:
- beta: Initial regression coefficients
- tau2: Initial scale parameter
- sig2: Initial variance parameter}

\item{warm}{Integer. Number of warm-up draws to discard (default: 0)}

\item{thin}{Integer. Keep every thin-th draw for thinning (default: 1)}

\item{number_par}{Integer. Total number of parameters (default: length(name_par))}

\item{name_par}{Character vector. Names of parameters}

\item{y}{Numeric vector/matrix. Response variable (n x 1)}

\item{X}{Numeric matrix. Design matrix (n x p)}

\item{a_tau}{Numeric. Shape parameter for tau2 prior (default: 0.5)}

\item{b_tau}{Numeric. Scale parameter for tau2 prior (default: 0.5)}

\item{a_sig}{Numeric. Shape parameter for sig2 prior (default: 0.5)}

\item{b_sig}{Numeric. Scale parameter for sig2 prior (default: 0.5)}

\item{metro}{Logical. Whether to use Metropolis-Hastings (default: FALSE)}

\item{metro.tune}{Numeric. Tuning parameter for Metropolis-Hastings (default: NULL)}

\item{n_chains}{Integer. Number of MCMC chains to run (default: 1)}
}
\value{
List containing:
\itemize{
  \item draws - Matrix of posterior draws (rows: samples, cols: parameters)
  \item n_mcmc - Number of MCMC iterations
  \item warm - Number of warm-up iterations
  \item thin - Thinning interval
  \item sampleidx - Vector indicating which iterations were kept
}
}
\description{
Implements Gibbs sampling for Bayesian linear regression with 
            Student-t using Rcpp for computational efficiency.
}
\examples{
\dontrun{
# Generate sample data
n <- 100
p <- 3
X <- matrix(rnorm(n*p), n, p)
true_beta <- c(1, -0.5, 2)
y <- X \%*\% true_beta + rt(n, df=3)

# Set initial values
start <- list(
  beta = rep(0, p),
  tau2 = 1,
  sig2 = 1
)

# Run Gibbs sampler
res <- gibbs_t_cpp_full(
  n_mcmc = 5000,
  start_lst = start,
  warm = 1000,
  thin = 2,
  name_par = c("beta1", "beta2", "beta3", "tau2", "sig2"),
  y = y,
  X = X
)
}

}
